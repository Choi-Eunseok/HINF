#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>
#include <SoftwareSerial.h>

#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SH1106 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
SoftwareSerial mySerial(2, 3);
int num = 0;
int check = 0;
int a = 0;
int b = 0;
int c = 0;
int d = 0;
int e = 0;
int but7 = 0;
int test = 0;
int del = 0;
int dot = 0;

const unsigned char PROGMEM HINF [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1E, 0x00, 0x00, 0x7C, 0x00, 0xFE, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
  0x1F, 0xC0, 0x01, 0xFC, 0x03, 0xFF, 0xBF, 0x00, 0x3C, 0x03, 0x80, 0x01, 0xFF, 0x8F, 0xFF, 0xFC,
  0x1F, 0xC0, 0x01, 0xFC, 0x07, 0xFF, 0xFF, 0x00, 0x7C, 0x0F, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xF8,
  0x1F, 0xC0, 0x01, 0xFC, 0x0F, 0xFF, 0xFE, 0x00, 0xFC, 0x0F, 0xE0, 0x0F, 0xFF, 0xFF, 0xFF, 0x0E,
  0x1F, 0xC0, 0x00, 0xFC, 0x1F, 0xFF, 0xFC, 0x01, 0xFC, 0x1F, 0xF0, 0x1F, 0xFF, 0xFF, 0xFF, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x3F, 0xFF, 0xF8, 0x03, 0xFC, 0x3F, 0xF8, 0x1F, 0xFF, 0xFF, 0xE0, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x20, 0x0F, 0xF0, 0x07, 0xFE, 0x3F, 0xFC, 0x10, 0x0F, 0xFC, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xC0, 0x07, 0xFE, 0x7F, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x0F, 0x7E, 0xFF, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF9, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF0, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xE0, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xC0, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x7C, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0x80, 0x7C, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0x80, 0x7C, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0x00, 0x7C, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0x00, 0x7C, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x83, 0x00, 0xFE, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0x00, 0x7C, 0x00, 0x0F, 0xC0, 0x07, 0x00,
  0x3F, 0x9F, 0xE0, 0xFE, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0x00, 0x3C, 0x00, 0x0F, 0xFF, 0xFF, 0x80,
  0x3F, 0xBF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3C, 0x00, 0x0F, 0xFF, 0xFF, 0xC0,
  0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xFF, 0xFF, 0xC0,
  0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xFF, 0xFF, 0xE0,
  0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xFF, 0xFF, 0xE0,
  0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xFF, 0xFF, 0xE0,
  0x3F, 0x80, 0x3F, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xC0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x0F, 0xE0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xE0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x7E, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x7F, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x7F, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x00, 0x7F, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x07, 0xC0, 0x00, 0x7F, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x0F, 0xF0, 0x00, 0x7F, 0x00, 0x3F, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x1F, 0xF0, 0x00, 0x7F, 0x00, 0x3F, 0x00, 0x0F, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x3F, 0xF1, 0xC0, 0x7F, 0x00, 0x3F, 0x00, 0x1F, 0xE0, 0x00, 0x00,
  0x1F, 0x80, 0x00, 0xFC, 0x00, 0x7F, 0xFB, 0xC0, 0x7F, 0x00, 0x3F, 0x00, 0x3F, 0xE0, 0x00, 0x00,
  0x1F, 0xC0, 0x01, 0xFC, 0x00, 0xFF, 0xFF, 0x80, 0x7F, 0x00, 0x3F, 0x00, 0xFF, 0xF0, 0x00, 0x00,
  0x1F, 0xC0, 0x01, 0xFC, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0x00, 0x3F, 0x01, 0xFF, 0xF0, 0x00, 0x00,
  0x1F, 0xC0, 0x01, 0xFC, 0x03, 0xFF, 0xFF, 0x80, 0x7F, 0x00, 0x3F, 0x03, 0xFF, 0xF0, 0x00, 0x00,
  0x1F, 0xC0, 0x01, 0xFC, 0x07, 0xF3, 0xFF, 0x00, 0x7F, 0x00, 0x7E, 0x07, 0xF0, 0xF0, 0x00, 0x00,
  0x1F, 0xE0, 0x03, 0xFC, 0x0E, 0x00, 0xFF, 0x00, 0x60, 0x00, 0x7E, 0x0E, 0x00, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {

  display.begin();
  display.clearDisplay();
  display.setTextSize(4);
  display.setTextColor(WHITE);
  display.clearDisplay();
  Serial.begin(9600);
  mySerial.begin(9600);
  pinMode(5, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
}

void loop() {
  if (test < 2)
  {
    display.clearDisplay();
    display.setTextSize(1);
    display.drawBitmap(0, 0,  HINF, 128, 64, 1);
    display.display();
    delay(200);
    display.clearDisplay();
    display.display();
    delay(100);
    test++;
  }
  int but7 = digitalRead(7);
  int but6 = digitalRead(6);
  int but5 = digitalRead(5);
  /*if (but7 == HIGH && check == 0)
    {
    check=1;
    num++;
    Serial.println(num);
    delay(500);
    }
    else
    {
    if (num == 0)
    {
      Serial.println(num);
      display.setTextSize(3);
      display.setCursor(0, 21);
      display.print("H.I.N.F");
      display.display();
      delay(20);
    }
    }*/
  if (but7 != check) {
    if (but7 == LOW) {
      num++;
    }
    delay(50);
  }
  check = but7;
  if (num == 0)
  {
    Serial.println(num);
    display.clearDisplay();
    /*display.setTextSize(3);
      display.setCursor(0, 21);
      display.print("H.I.N.F");*/
    display.setTextSize(1);
    display.drawBitmap(0, 0,  HINF, 128, 64, 1);
    display.display();
  }
  if (num == 1)
  {
    display.setTextSize(4);
    if (but6 == 0)
    {
      a++;
    }
    if (but5 == 0)
    {
      a--;
    }
    if (a < 0)
    {
      a = a + 10;
    }
    if (a > 9)
    {
      a = a - 10;
    }
    display.clearDisplay();
    display.setCursor(5, 21);
    display.print("_____");
    display.display();
    delay(50);
    display.setCursor(5, 15);
    display.print(a);
    display.display();
    delay(70);
    display.clearDisplay();
  }
  if (num == 2)
  {
    display.setTextSize(4);
    if (but6 == 0)
    {
      b++;
    }
    if (but5 == 0)
    {
      b--;
    }
    if (b < 0)
    {
      b = b + 10;
    }
    if (b > 9)
    {
      b = b - 10;
    }
    display.clearDisplay();
    display.setCursor(5, 21);
    display.print("_____");
    display.setCursor(5, 15);
    display.print(a);
    display.display();
    delay(50);
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.display();
    delay(70);
    display.clearDisplay();
  }
  if (num == 3)
  {
    display.setTextSize(4);
    if (but6 == 0)
    {
      c++;
    }
    if (but5 == 0)
    {
      c--;
    }
    if (c < 0)
    {
      c = c + 10;
    }
    if (c > 9)
    {
      c = c - 10;
    }
    display.clearDisplay();
    display.setCursor(5, 21);
    display.print("_____");
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.display();
    delay(50);
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.print(c);
    display.display();
    delay(70);
    display.clearDisplay();
  }
  if (num == 4)
  {
    display.setTextSize(4);
    if (but6 == 0)
    {
      d++;
    }
    if (but5 == 0)
    {
      d--;
    }
    if (d < 0)
    {
      d = d + 10;
    }
    if (d > 9)
    {
      d = d - 10;
    }
    display.clearDisplay();
    display.setCursor(5, 21);
    display.print("_____");
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.print(c);
    display.display();
    delay(50);
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.print(c);
    display.print(d);
    display.display();
    delay(70);
    display.clearDisplay();
  }
  if (num == 5)
  {
    display.setTextSize(4);
    if (but6 == 0)
    {
      e++;
    }
    if (but5 == 0)
    {
      e--;
    }
    if (e < 0)
    {
      e = e + 10;
    }
    if (e > 9)
    {
      e = e - 10;
    }
    display.clearDisplay();
    display.setCursor(5, 21);
    display.print("_____");
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.print(c);
    display.print(d);
    display.display();
    delay(50);
    display.setCursor(5, 15);
    display.print(a);
    display.print(b);
    display.print(c);
    display.print(d);
    display.print(e);
    display.display();
    delay(70);
    display.clearDisplay();
  }
  if (num == 6)
  {
    char * str = new char[6];
    str[0] = a + 48;
    str[1] = b + 48;
    str[2] = c + 48;
    str[3] = d + 48;
    str[4] = e + 48;
    str[5] = '\0';
    mySerial.write(str);
    while(del < 3)
    {
      display.clearDisplay();
      display.setTextSize(2);
      display.setCursor(3, 20);
      display.print("Sending");
      display.display();
      delay(100);
      display.setCursor(3, 22);
      display.print("       .");
      display.display();
      delay(100);
      display.setCursor(3, 22);
      display.print("       ..");
      display.display();
      delay(100);
      display.setCursor(3, 22);
      display.print("       ...");
      display.display();
      delay(100);
      display.clearDisplay();
      del++;
    }
    display.display();
  num = 0;
  check = 0;
  a = 0;
  b = 0;
  c = 0;
  d = 0;
  e = 0;
  but7 = 0;
  test = 0;
  del=0;
  }
}
